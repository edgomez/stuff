#!/bin/sh

sd="$(dirname "$0")"
sd="$(cd "$sd" && pwd -P)"

opt_versions=""
opt_versions_default="5.6"

parse_args()
{
    while [ $# -gt 0 ] ; do
        case "$1" in
        *) opt_versions="$opt_versions $1"; ;;
        esac
        shift
    done
    if [ -z "$opt_versions" ] ; then
        opt_versions="$opt_versions_default"
    fi
}

# Returns the numbr of CPUs on Linux i386/x86_64
numcpu()
{
    grep ^processor /proc/cpuinfo | wc -l
}

linux_check_tree_root()
{
    if [ ! -f Makefile -o ! -f Kbuild -o ! -f ./scripts/setlocalversion ] ; then
        printf "error: not in a kernel source root dir\n"
        return 1
    fi
    return 0
}

# clean/pull in a Linux rootdir
linux_pull()
{
    if [ ! linux_check_tree_root ] ; then
        exit 1
    fi
    if [ ! -z "$(git status --untracked-files=no --porcelain)" ]; then
        git reset --hard
    fi
    git pull
}

# Compiles a linux kernel for debian
#   - 3/2*cpu concurrent jobs
#   - uses schedtool to batch the process
linux_compile()
{
    local target="${1:-bindeb-pkg}"
    if [ ! linux_check_tree_root ] ; then
        exit 1
    fi

    schedtool -D -e \
        make \
        -j "$(($(numcpu) + 2))" \
        "$target"
}

update_and_compile_kernel()
{
    local location="$1"
    local oldpwd="$(pwd)"

    cd "$location"
    linux_pull
    linux_compile bindeb-pkg
    cd "$oldpwd"
}

main()
{
    parse_args "$@"
    local i

    for i in $opt_versions; do
        if [ ! -d "$i" ] ; then
            continue
        fi
        update_and_compile_kernel "$i"
    done
}

main "$@"
